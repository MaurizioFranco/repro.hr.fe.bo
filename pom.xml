<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>centauri.academy.proxima.informatica</groupId>
	<artifactId>repro.hr.fe.bo</artifactId>
	<version>0.1</version>
	<packaging>war</packaging>

	<name>CeRePro Frontend BackOffice Maven Webapp</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<package.file.name>repro.hr.fe.bo</package.file.name>
	</properties>

	<build>
		<finalName>${package.file.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
<!-- 				<configuration> -->
<!-- 					<encoding>UTF-8</encoding> -->
<!-- 					<outputFileNameMapping>@{groupId}@-@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping> -->
<!--  					<outputFileNameMapping>centauri.war</outputFileNameMapping> -->
<!-- 				</configuration> -->
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-maven-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- <webResources> -->
			<!-- <resource> -->
			<!-- this is relative to the pom.xml directory -->
			<!-- <directory>src/main/resources/static</directory> -->
			<!-- </resource> -->
			<!-- </webResources> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-dependency-plugin</artifactId> -->
			<!-- <version>3.0.2</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>copy-dependencies</id> -->
			<!-- <phase>package</phase> -->
			<!-- <goals> -->
			<!-- <goal>copy-dependencies</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <outputDirectory>${project.basedir}/target/external_libraries</outputDirectory> -->
			<!-- <overWriteReleases>true</overWriteReleases> -->
			<!-- <overWriteSnapshots>true</overWriteSnapshots> -->
			<!-- <overWriteIfNewer>true</overWriteIfNewer> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<!-- <properties> -->
			<!-- <env>application.dev</env> -->
			<!-- </properties> -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>				    
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>selected dev profile</echo>
										<delete file="${project.build.directory}/centauri/common/js/env/env.js"  />
<!-- 										<mkdir dir="${project.build.directory}/centauri/common/js/env/" /> -->
										<copy file="src/main/webapp/a/js/env.dev.js" tofile="${project.build.directory}/centauri/common/js/env/env.js" />
										<!--
										<delete file="${project.build.outputDirectory}/a/js/env.prod.js" />
										<delete file="${project.build.outputDirectory}/a/js/env.stage.js"/>
										<delete file="${project.build.outputDirectory}/a/js/env.test.js" />
										<delete file="${project.build.outputDirectory}/a/js/env.dev.js" />
										-->
										<echo>Used env.dev.js!!!</echo>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>		
		<profile>
			<id>stage</id>
			<!-- <properties> -->
			<!-- <env>application.stage</env> -->
			<!-- </properties> -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>selected stage profile</echo>
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.js" /> -->
										<!-- <copy -->
										<!-- file="src/main/webapp/a/js/env.stage.js" -->
										<!-- tofile="${project.build.outputDirectory}/a/js/env.stage.js" 
											/> -->
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.prod.js" /> -->
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.test.js" /> -->
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.dev.js" /> -->
										<!-- 
										<delete
											dir="${project.build.directory}/centauri/common/js/env/"
											includeemptydirs="true" />
										<mkdir
											dir="${project.build.directory}/centauri/common/js/env/" />
										<copy file="src/main/webapp/a/js/env.stage.js"
											tofile="${project.build.directory}/centauri/common/js/env/env.js" />
											-->
											<delete file="${project.build.directory}/centauri/common/js/env/env.js"  />
<!-- 										<mkdir dir="${project.build.directory}/centauri/common/js/env/" /> -->
										<copy file="src/main/webapp/a/js/env.stage.js" tofile="${project.build.directory}/centauri/common/js/env/env.js" />
										<echo>Using env.stage.js</echo>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<!-- <properties> -->
			<!-- <env>application.prod</env> -->
			<!-- </properties> -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo>selected prod profile</echo>
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.js" /> -->
										<!-- <copy -->
										<!-- file="src/main/webapp/a/js/env.prod.js" -->
										<!-- tofile="${project.build.outputDirectory}/a/js/env.prod.js" 
											/> -->
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.stage.js" 
											/> -->
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.test.js" /> -->
										<!-- <delete -->
										<!-- file="${project.build.outputDirectory}/a/js/env.dev.js" /> -->
										<!-- 
										<delete
											dir="${project.build.directory}/centauri/common/js/env/"
											includeemptydirs="true" />
										<mkdir
											dir="${project.build.directory}/centauri/common/js/env/" />
										<copy file="src/main/webapp/a/js/env.prod.js"
											tofile="${project.build.directory}/centauri/common/js/env/env.js" />
											-->
											<delete file="${project.build.directory}/centauri/common/js/env/env.js"  />
<!-- 										<mkdir dir="${project.build.directory}/centauri/common/js/env/" /> -->
										<copy file="src/main/webapp/a/js/env.prod.js" tofile="${project.build.directory}/centauri/common/js/env/env.js" />
										<echo>Using env.prod.js</echo>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
